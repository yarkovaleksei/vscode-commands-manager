{
  "name": "custom-commands",
  "displayName": "Custom Commands Manager",
  "description": "Manage and execute custom command groups with icons and multilingual support",
  "version": "0.0.1",
  "icon": "icon.png",
  "iconThemes": [
    {
      "iconPath": "icon-dark.png",
      "theme": "dark"
    },
    {
      "iconPath": "icon.png",
      "theme": "light"
    }
  ],
  "engines": {
    "vscode": "^1.101.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "configuration": {
      "title": "Custom Commands Manager",
      "properties": {
        "customCommands.language": {
          "type": "string",
          "enum": [
            "en",
            "ru"
          ],
          "default": "en",
          "description": "Interface language for the extension"
        },
        "customCommands.commandTimeout": {
          "type": "number",
          "default": 30,
          "description": "Timeout for command execution in seconds"
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "custom-commands",
          "title": "Custom Commands Manager",
          "icon": "resources/icon.svg"
        }
      ]
    },
    "views": {
      "custom-commands": [
        {
          "icon": "$(terminal)",
          "id": "customCommandsView",
          "name": "%view.title%"
        }
      ]
    },
    "commands": [
      {
        "command": "customCommands.refresh",
        "title": "%command.refresh%"
      },
      {
        "command": "customCommands.addGroup",
        "title": "%command.addGroup%"
      },
      {
        "command": "customCommands.addCommand",
        "title": "%command.addCommand%"
      },
      {
        "command": "customCommands.editGroup",
        "title": "%command.editGroup%"
      },
      {
        "command": "customCommands.editCommand",
        "title": "%command.editCommand%"
      },
      {
        "command": "customCommands.execute",
        "title": "%command.execute%",
        "enablement": "true"
      },
      {
        "command": "customCommands.executeGroup",
        "title": "%command.executeGroup%"
      },
      {
        "command": "customCommands.deleteGroup",
        "title": "%command.deleteGroup%"
      },
      {
        "command": "customCommands.deleteCommand",
        "title": "%command.deleteCommand%"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "customCommands.refresh",
          "group": "navigation",
          "when": "view == customCommandsView"
        },
        {
          "command": "customCommands.addGroup",
          "group": "navigation",
          "when": "view == customCommandsView"
        }
      ],
      "view/item/context": [
        {
          "command": "customCommands.addCommand",
          "group": "context",
          "when": "view == customCommandsView && viewItem == group"
        },
        {
          "command": "customCommands.editGroup",
          "group": "context",
          "when": "view == customCommandsView && viewItem == group"
        },
        {
          "command": "customCommands.deleteGroup",
          "group": "context",
          "when": "view == customCommandsView && viewItem == group"
        },
        {
          "command": "customCommands.executeGroup",
          "group": "context",
          "when": "view == customCommandsView && viewItem == group"
        },
        {
          "command": "customCommands.editCommand",
          "group": "context",
          "when": "view == customCommandsView && viewItem == command"
        },
        {
          "command": "customCommands.deleteCommand",
          "group": "context",
          "when": "view == customCommandsView && viewItem == command"
        },
        {
          "command": "customCommands.execute",
          "group": "context",
          "when": "view == customCommandsView && viewItem == command"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run clear-dist && npm run check-types && npm run lint && node esbuild.js && npm-run-all -p copy:*",
    "copy:l10n": "cpy l10n dist",
    "copy:icons": "cpy icon.png dist/ && cpy icon-dark.png dist/",
    "copy:resources": "cpy resources dist",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run clear-dist && npm run check-types && npm run lint && node esbuild.js --production && npm-run-all -p copy:*",
    "compile-tests": "tsc -p . --outDir dist",
    "watch-tests": "tsc -p . -w --outDir dist",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "vscode-test",
    "clear-dist": "rimraf dist"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.101.0",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.5.2",
    "cpy-cli": "^5.0.0",
    "esbuild": "^0.25.3",
    "eslint": "^9.25.1",
    "npm-run-all": "^4.1.5",
    "rimraf": "^6.0.1",
    "typescript": "^5.8.3"
  }
}
